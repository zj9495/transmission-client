{"version":3,"sources":["i18n/lang sync /^/.//.*/.json$","constants.ts","containers/Intl/index.tsx","containers/Theme/index.tsx","components/SignIn/index.tsx","store/constants.ts","store/reducers/rpc.ts","store/reducers/app.ts","store/index.ts","api/request.ts","utils/object.ts","store/actions/rpc.ts","api/index.ts","containers/SignIn/index.tsx","store/selector.ts","store/actions/app.ts","components/ActionBar/index.tsx","components/MenuBar/MenuItem.tsx","components/MenuBar/index.tsx","utils/formatter.ts","components/TorrentTable/renderName.tsx","components/TorrentTable/renderProgress.tsx","components/TorrentTable/index.tsx","components/AddTorrentDialog/index.tsx","components/AppStatusBar/index.tsx","components/MessageBar/index.tsx","components/List/index.tsx","components/ThemeToggle/index.tsx","components/LanguageToggle/index.tsx","components/Header/index.tsx","appStart.ts","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","APP_ROUTES","LANGUAGES","text","STATUS_TYPES","connect","state","locale","rpc","props","children","messages","require","replace","getMessages","themeType","theme","muiLocale","enUS","zhCN","createMuiTheme","palette","type","undefined","ThemeProvider","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","withStyles","createStyles","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","langBox","justifyContent","submit","classes","intl","useIntl","Grid","container","component","className","item","xs","sm","md","Paper","elevation","square","Avatar","LockOutlined","formatMessage","noValidate","TextField","required","fullWidth","label","name","autoComplete","autoFocus","Box","FormControlLabel","control","Checkbox","value","FormControl","Select","onChange","event","setLocale","target","language","MenuItem","Button","mt","SET_LOCALE","CHANGE_THEME","SET_SESSION_ID","SET_TORRENTS","SET_SESSION","SET_SESSION_STATS","TOGGLE_MENUOPEN","SET_SELECTED_IDS","TOGGLE_ADD_TORRENT_DIALOG","SET_MESSAGE_BAR","initialRPCState","sessionId","torrents","all","downloading","downloadWaiting","paused","active","seeding","seedWaiting","checking","checkWaiting","warning","error","session","downloadDir","units","memoryBytes","memoryUnits","sizeBytes","sizeUnits","speedBytes","speedUnits","downloadDirFreeSpace","version","rpcVersion","stats","activeTorrentCount","downloadSpeed","pausedTorrentCount","torrentCount","uploadSpeed","menuOpen","selectedIds","initialAppState","open","messageConfig","key","loading","message","severity","reducer","combineReducers","action","produce","draft","payload","app","store","createStore","composeWithDevTools","applyMiddleware","thunk","request","axios","create","baseURL","process","withCredentials","interceptors","use","headers","data","method","response","status","defaults","common","dispatch","Promise","reject","objectToCamelCase","obj","result","forEach","oldKey","newKey","camelCase","child","Array","isArray","isEmpty","val","getSessionAction","setSession","arguments","tag","getState","then","res","catch","getSessionStatsAction","getTorrentsAction","fields","filter","rateDownload","rateUpload","SignIn","getSessionSelector","getDownloadDirSelector","getStatsSelector","getSpeedBytesSelector","getSpeedUnitsSelector","getSizeBytesSelector","getSizeUnitsSelector","getMenuOpen","getTorrents","getAddTorrentDialogOpen","getSelectedIds","getMessageConfig","toggleAddTorrentDialog","setMessageBar","ActionBar","useDispatch","useSelector","disableAction","length","Tooltip","title","IconButton","onClick","disabled","ids","removeTorrents","icon","num","listItemProps","omit","ListItem","button","ListItemIcon","Badge","badgeContent","ListItemText","primary","ListItemSecondaryAction","drawerWidth","menus","textId","hideOnZero","useStyles","makeStyles","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerTop","top","drawerShadow","boxShadow","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","padding","mixins","content","flexGrow","MenuBar","torrentStatus","useParams","history","useHistory","React","useState","menuTemporaryOpen","setMenuTemporaryOpen","Drawer","clsx","onMouseOver","onMouseLeave","List","selected","push","formatBytes","number","bytes","digits","unitsIndex","Number","toFixed","formatSize","allowZero","formatSpeed","preventDefault","NameLink","renderName","params","row","border","divider","position","overflow","borderRadius","lineHeight","bar","ProgressBar","valueInPercent","toLocaleString","style","maxWidth","renderProgress","useSize","valueFormatter","useSpeed","useTime","timeStamp","moment","unix","format","renderStatus","TorrentTable","columns","field","headerName","renderCell","second","POSITIVE_INFINITY","seconds","Math","floor","minutes","hours","formatLeftTime","rows","showToolbar","pageSize","checkboxSelection","disableSelectionOnClick","onSelectionChange","rowIds","AddTorrentDialog","downloadDirFromStore","useForm","register","handleSubmit","reset","errors","useEffect","torrentUrl","handleClose","handleAdd","filename","handleAddResult","Dialog","onClose","aria-labelledby","data-testid","DialogTitle","onSubmit","DialogContent","inputProps","inputRef","helperText","multiline","DialogActions","split","AppStatusBar","freeSpace","MessageBar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","CircularProgress","size","background","Torrents","setInterval","ThemeToggle","enterDelay","data-ga-event-category","data-ga-event-action","LanguageToggle","languageMenu","setLanguageMenu","handleLanguageMenuClose","currentTarget","find","fontSize","anchorEl","Boolean","data-no-link","lang","search","shape","fade","white","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","SearchAppBar","appBarColor","AppBar","Toolbar","edge","aria-label","noWrap","InputBase","placeholder","input","LicenseInfo","setLicenseKey","this","setupLicense","start","App","CssBaseline","path","from","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","querySelector","URL","origin","addEventListener","fetch","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6108486a.chunk.js","sourcesContent":["var map = {\n\t\"./de.json\": 224,\n\t\"./en.json\": 135,\n\t\"./es.json\": 225,\n\t\"./fr.json\": 226,\n\t\"./hu.json\": 227,\n\t\"./it.json\": 228,\n\t\"./ko.json\": 229,\n\t\"./nl.json\": 230,\n\t\"./pl.json\": 231,\n\t\"./pt_BR.json\": 232,\n\t\"./pt_PT.json\": 233,\n\t\"./ro.json\": 234,\n\t\"./ru.json\": 235,\n\t\"./uk.json\": 236,\n\t\"./zh_CN.json\": 237,\n\t\"./zh_TW.json\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 223;","import { IStatusColor } from \"./types\";\n\nexport const APP_ROUTES = {\n  base: \"/\",\n  signIn: \"/sign-in\",\n  list: \"/list/:torrentStatus\",\n  allList: \"list/all\",\n};\n\nexport const LANGUAGES = [\n  {\n    code: \"en\",\n    text: \"English\",\n  },\n  {\n    code: \"zh-CN\",\n    text: \"中文 - 简体\",\n  },\n  {\n    code: \"zh-TW\",\n    text: \"中文 - 繁体\",\n  },\n  {\n    code: \"de\",\n    text: \"Deutsch\",\n  },\n  {\n    code: \"es\",\n    text: \"Español\",\n  },\n  {\n    code: \"fr\",\n    text: \"Français\",\n  },\n  {\n    code: \"hu\",\n    text: \"Magyar\",\n  },\n  {\n    code: \"it\",\n    text: \"Italiano\",\n  },\n  {\n    code: \"ko\",\n    text: \"Korean\",\n  },\n  {\n    code: \"nl\",\n    text: \"Nederlands\",\n  },\n  {\n    code: \"pt-BR\",\n    text: \"Português - Brasil\",\n  },\n  {\n    code: \"pt-PT\",\n    text: \"Português - Portugal\",\n  },\n  {\n    code: \"ro\",\n    text: \"Romanian\",\n  },\n  {\n    code: \"ru\",\n    text: \"Русский\",\n  },\n  {\n    code: \"uk\",\n    text: \"українська мова\",\n  },\n];\n\nexport const GITHUB_REPO = \"https://github.com/zj9495/transmission-client\";\n\nexport const STATUS_COLORS: IStatusColor = {\n  3: \"disabled\",\n  4: \"primary\",\n};\n\nexport const STATUS_TYPES = {\n  paused: 0,\n  checkwait: 1,\n  check: 2,\n  downloadwait: 3,\n  download: 4,\n  seedwait: 5,\n  seed: 6,\n};\n","/* eslint-disable import/no-dynamic-require */\nimport React from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport { connect } from \"react-redux\";\n\nimport { IState } from \"src/types\";\n\ninterface Props {\n  locale: string;\n  children: JSX.Element;\n}\n\nfunction getMessages(locale: string): Record<string, string> {\n  let messages: Record<string, string>;\n  try {\n    // eslint-disable-next-line global-require\n    messages = require(`src/i18n/lang/${locale.replace(\"-\", \"_\")}.json`);\n  } catch {\n    // eslint-disable-next-line global-require\n    messages = require(`src/i18n/lang/en.json`);\n  }\n  return messages;\n}\nconst Intl = (props: Props) => {\n  const { locale, children } = props;\n  const messages = getMessages(locale);\n\n  return (\n    <IntlProvider locale={locale} messages={messages}>\n      {children}\n    </IntlProvider>\n  );\n};\n\nconst mapStateToProps = (state: IState) => ({\n  locale: state.rpc.locale,\n});\n\nexport default connect(mapStateToProps)(Intl);\n","import React from \"react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { enUS, zhCN, Localization } from \"@material-ui/core/locale\";\n\nimport { IState } from \"src/types\";\n\ninterface Props {\n  locale: string;\n  themeType: \"light\" | \"dark\" | \"auto\";\n  children?: JSX.Element;\n}\n\nfunction getMessages(locale: string): Localization {\n  let muiLocale = enUS;\n  switch (locale) {\n    case \"en\":\n      muiLocale = enUS;\n      break;\n    case \"zh-CN\":\n      muiLocale = zhCN;\n      break;\n    default:\n      break;\n  }\n  return muiLocale;\n}\n\nconst Theme = (props: Props) => {\n  const { locale, themeType, children } = props;\n  const messages = getMessages(locale);\n  const theme = createMuiTheme(\n    {\n      palette: {\n        type: themeType === \"auto\" ? undefined : themeType,\n      },\n    },\n    messages\n  );\n\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n\nconst mapStateToProps = (state: IState) => ({\n  locale: state.rpc.locale,\n  themeType: state.rpc.theme,\n});\n\nexport default connect(mapStateToProps)(Theme);\n","/* eslint-disable implicit-arrow-linebreak */\nimport React from \"react\";\nimport {\n  Avatar,\n  Button,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Link,\n  Paper,\n  Box,\n  Grid,\n  Typography,\n  MenuItem,\n  Select,\n  FormControl,\n} from \"@material-ui/core\";\nimport { LockOutlined as LockOutlinedIcon } from \"@material-ui/icons\";\nimport {\n  Theme,\n  withStyles,\n  createStyles,\n  WithStyles,\n} from \"@material-ui/core/styles\";\nimport { useIntl } from \"react-intl\";\n\nimport { LANGUAGES } from \"src/constants\";\n\nexport const styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100vh\",\n    },\n    image: {\n      backgroundImage: \"url(https://source.unsplash.com/random)\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundColor:\n        theme.palette.type === \"dark\"\n          ? theme.palette.grey[900]\n          : theme.palette.grey[50],\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    langBox: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\ninterface Props extends WithStyles<typeof styles> {\n  locale: string;\n  setLocale: (locale: string) => void;\n}\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://github.com/zj9495/transmission-webui\">\n        Transmission Webui\n      </Link>{\" \"}\n      {new Date().getFullYear()}.\n    </Typography>\n  );\n}\n\nfunction SignIn(props: Props) {\n  const { classes, locale } = props;\n  const intl = useIntl();\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.setLocale(event.target.value as string);\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            {intl.formatMessage({ id: \"signIn\" })}\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"userName\"\n              label={intl.formatMessage({ id: \"userName\" })}\n              name=\"userName\"\n              autoComplete=\"userName\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label={intl.formatMessage({ id: \"password\" })}\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <Box className={classes.langBox}>\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label={intl.formatMessage({ id: \"rememberMe\" })}\n              />\n              <FormControl>\n                <Select value={locale} onChange={handleChange}>\n                  {LANGUAGES.map((language) => (\n                    <MenuItem key={language.code} value={language.code}>\n                      {language.text}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              {intl.formatMessage({ id: \"SIGNIN\" })}\n            </Button>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default withStyles(styles)(SignIn);\n","export const SET_LOCALE = \"SET_LOCALE\";\nexport const CHANGE_THEME = \"CHANGE_THEME\";\nexport const SET_SESSION_ID = \"SET_SESSION_ID\";\nexport const SET_TORRENTS = \"SET_TORRENTS\";\nexport const SET_SESSION = \"SET_SESSION\";\nexport const SET_SESSION_STATS = \"SET_SESSION_STATS\";\nexport const TOGGLE_MENUOPEN = \"TOGGLE_MENUOPEN\";\nexport const SET_SELECTED_IDS = \"SET_SELECTED_IDS\";\n\n// Add Torrent\nexport const TOGGLE_ADD_TORRENT_DIALOG = \"TOGGLE_ADD_TORRENT_DIALOG\";\n\nexport const SET_MESSAGE_BAR = \"SET_MESSAGE_BAR\";\n","import produce from \"immer\";\n\nimport { IRPCState } from \"src/types\";\nimport {\n  SET_LOCALE,\n  CHANGE_THEME,\n  SET_SESSION_ID,\n  SET_TORRENTS,\n  SET_SESSION,\n  TOGGLE_MENUOPEN,\n  SET_SELECTED_IDS,\n  SET_SESSION_STATS,\n} from \"../constants\";\n\nexport const initialRPCState: IRPCState = {\n  locale: \"en\",\n  theme: \"light\",\n  sessionId: undefined,\n  torrents: {\n    all: [],\n    downloading: [],\n    downloadWaiting: [],\n    paused: [],\n    active: [],\n    seeding: [],\n    seedWaiting: [],\n    checking: [],\n    checkWaiting: [],\n    warning: [],\n    error: [],\n  },\n  session: {\n    downloadDir: \"\",\n    units: {\n      memoryBytes: 1024,\n      memoryUnits: [],\n      sizeBytes: 1000,\n      sizeUnits: [\"kB\", \"MB\", \"GB\", \"TB\"],\n      speedBytes: 1000,\n      speedUnits: [\"kB/s\", \"MB/s\", \"GB/s\", \"TB/s\"],\n    },\n    downloadDirFreeSpace: 0,\n    version: \"\",\n    rpcVersion: 0,\n  },\n  stats: {\n    activeTorrentCount: 0,\n    downloadSpeed: 0,\n    pausedTorrentCount: 0,\n    torrentCount: 0,\n    uploadSpeed: 0,\n  },\n  menuOpen: false,\n  selectedIds: [],\n};\n\nexport interface Action {\n  type: string;\n  payload: any;\n}\n\nexport default (state = initialRPCState, action: Action) =>\n  // eslint-disable-next-line consistent-return\n  produce(state, (draft) => {\n    switch (action.type) {\n      case SET_LOCALE:\n        draft.locale = action.payload;\n        break;\n      case CHANGE_THEME:\n        draft.theme = action.payload;\n        break;\n      case SET_SESSION_ID:\n        draft.sessionId = action.payload;\n        break;\n      case SET_TORRENTS:\n        draft.torrents = action.payload;\n        break;\n      case SET_SESSION:\n        draft.session = action.payload;\n        break;\n      case TOGGLE_MENUOPEN:\n        draft.menuOpen = action.payload;\n        break;\n      case SET_SELECTED_IDS:\n        draft.selectedIds = action.payload;\n        break;\n      case SET_SESSION_STATS:\n        draft.stats = action.payload;\n        break;\n      default:\n        return state;\n    }\n  });\n","import produce from \"immer\";\n\nimport { IAppState } from \"src/types\";\nimport { TOGGLE_ADD_TORRENT_DIALOG, SET_MESSAGE_BAR } from \"../constants\";\n\nexport interface Action {\n  type: string;\n  payload: any;\n}\n\nexport const initialAppState: IAppState = {\n  open: false,\n  messageConfig: {\n    key: 0,\n    open: false,\n    loading: false,\n    message: \"\",\n    severity: \"info\",\n  },\n};\n\nexport default (state = initialAppState, action: Action) =>\n  // eslint-disable-next-line consistent-return\n  produce(state, (draft) => {\n    switch (action.type) {\n      case TOGGLE_ADD_TORRENT_DIALOG:\n        draft.open = action.payload;\n        break;\n      case SET_MESSAGE_BAR:\n        draft.messageConfig = action.payload;\n        break;\n      default:\n        return state;\n    }\n  });\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport rootReducer from \"./reducers/rpc\";\nimport appReducer from \"./reducers/app\";\n\nexport const reducer = combineReducers({\n  rpc: rootReducer,\n  app: appReducer,\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import axios from \"axios\";\n\nimport store from \"src/store\";\nimport { SET_SESSION_ID } from \"src/store/constants\";\n\nconst request = axios.create({\n  baseURL: `${process.env.REACT_APP_TR_RPC_HOST}/transmission/rpc`,\n  withCredentials: true,\n});\n\nrequest.interceptors.request.use((req) => {\n  req.headers[\"x-transmission-rpc-method\"] =\n    req.data.method || \"unknown-method\";\n  return req;\n});\n\nrequest.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response.status === 409) {\n      const sessionId = error.response.headers[\"x-transmission-session-id\"];\n      request.defaults.headers.common[\"x-transmission-session-id\"] = sessionId;\n      store.dispatch({\n        type: SET_SESSION_ID,\n        payload: sessionId,\n      });\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default request;\n","import { camelCase, isEmpty } from \"lodash\";\n\ninterface AnyObject {\n  [propName: string]: any;\n}\n\nexport const objectToCamelCase = (obj: AnyObject) => {\n  const result: AnyObject = {};\n  Object.keys(obj).forEach((oldKey) => {\n    const newKey = camelCase(oldKey);\n    const child = obj[oldKey];\n    result[newKey] = child;\n    if (Array.isArray(result[newKey]) && !isEmpty(result[newKey])) {\n      result[newKey] = result[newKey].map((item: AnyObject) => {\n        if (item instanceof Object && !isEmpty(item)) {\n          return objectToCamelCase(item);\n        }\n        return item;\n      });\n    } else if (result[newKey] instanceof Object && !isEmpty(result[newKey])) {\n      result[newKey] = objectToCamelCase(result[newKey]);\n    }\n  });\n\n  return result;\n};\n","/* eslint-disable unicorn/consistent-function-scoping */\n/* eslint-disable promise/always-return */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { STATUS_TYPES } from \"src/constants\";\nimport { ITorrent, ITorrents, IState } from \"src/types\";\n\nimport { getSession, getTorrents, getSessionStats } from \"src/api\";\nimport { objectToCamelCase } from \"src/utils/object\";\nimport {\n  SET_LOCALE,\n  CHANGE_THEME,\n  SET_TORRENTS,\n  SET_SESSION,\n  TOGGLE_MENUOPEN,\n  SET_SELECTED_IDS,\n  SET_SESSION_STATS,\n} from \"../constants\";\n\nexport const setLocale = (val: string) => (\n  dispatch: ThunkDispatch<{}, {}, AnyAction>\n) => {\n  dispatch({\n    type: SET_LOCALE,\n    payload: val,\n  });\n};\n\nexport const toggleTheme = () => (\n  dispatch: ThunkDispatch<{}, {}, AnyAction>,\n  getState: () => IState\n) => {\n  const state = getState();\n  const payload = state.rpc.theme === \"light\" ? \"dark\" : \"light\";\n  dispatch({\n    type: CHANGE_THEME,\n    payload,\n  });\n};\n\nexport const getSessionAction = () => (\n  dispatch: ThunkDispatch<{}, {}, AnyAction>\n) => {\n  const setSession = () =>\n    getSession().then((res) => {\n      dispatch({\n        type: SET_SESSION,\n        payload: objectToCamelCase(res.data.arguments),\n      });\n    });\n  return setSession().catch(() => {\n    setSession();\n  });\n};\n\nexport const getSessionStatsAction = () => (\n  dispatch: ThunkDispatch<{}, {}, AnyAction>\n) =>\n  getSessionStats().then((res) => {\n    dispatch({\n      type: SET_SESSION_STATS,\n      payload: objectToCamelCase(res.data.arguments),\n    });\n  });\nexport const getTorrentsAction = () => (\n  dispatch: ThunkDispatch<{}, {}, AnyAction>\n) =>\n  getTorrents().then((res) => {\n    const torrents: ITorrent[] = res.data.arguments.torrents || [];\n    const payload: ITorrents = {\n      all: torrents,\n      downloading: torrents.filter(\n        (item) => item.status === STATUS_TYPES.download\n      ),\n      downloadWaiting: torrents.filter(\n        (item) => item.status === STATUS_TYPES.downloadwait\n      ),\n      paused: torrents.filter((item) => item.status === STATUS_TYPES.paused),\n      active: torrents.filter((item) => item.rateDownload || item.rateUpload),\n      seeding: torrents.filter((item) => item.status === STATUS_TYPES.seed),\n      seedWaiting: torrents.filter(\n        (item) => item.status === STATUS_TYPES.seedwait\n      ),\n      checking: torrents.filter((item) => item.status === STATUS_TYPES.check),\n      checkWaiting: torrents.filter(\n        (item) => item.status === STATUS_TYPES.checkwait\n      ),\n      warning: [],\n      error: torrents.filter((item) => item.error),\n    };\n\n    dispatch({\n      type: SET_TORRENTS,\n      payload,\n    });\n  });\n\nexport const toggleMenuOpen = () => (\n  dispatch: ThunkDispatch<{}, {}, AnyAction>,\n  getState: () => IState\n) => {\n  const state = getState();\n  const payload = !state.rpc.menuOpen;\n  dispatch({\n    type: TOGGLE_MENUOPEN,\n    payload,\n  });\n};\n\nexport const setSelectedIds = (payload: number[]) => (\n  dispatch: ThunkDispatch<{}, {}, AnyAction>\n) => {\n  dispatch({\n    type: SET_SELECTED_IDS,\n    payload,\n  });\n};\n","import store from \"src/store\";\nimport request from \"./request\";\n\nexport const getSession = () =>\n  request({\n    method: \"post\",\n    data: { method: \"session-get\", arguments: {}, tag: \"\" },\n    headers: {\n      \"x-transmission-session-id\": store.getState().rpc.sessionId,\n    },\n  });\n\nexport const getSessionStats = () =>\n  request({\n    method: \"post\",\n    data: { method: \"session-stats\", arguments: {}, tag: \"\" },\n  });\n\nexport const getTorrents = () =>\n  request({\n    method: \"post\",\n    data: {\n      method: \"torrent-get\",\n      arguments: {\n        fields: [\n          \"id\",\n          \"name\",\n          \"status\",\n          \"hashString\",\n          \"totalSize\",\n          \"percentDone\",\n          \"addedDate\",\n          \"trackerStats\",\n          \"leftUntilDone\",\n          \"rateDownload\",\n          \"rateUpload\",\n          \"recheckProgress\",\n          \"rateDownload\",\n          \"rateUpload\",\n          \"peersGettingFromUs\",\n          \"peersSendingToUs\",\n          \"uploadRatio\",\n          \"uploadedEver\",\n          \"downloadedEver\",\n          \"downloadDir\",\n          \"error\",\n          \"errorString\",\n          \"doneDate\",\n          \"queuePosition\",\n          \"activityDate\",\n        ],\n      },\n      tag: \"\",\n    },\n  });\n\nexport const addTorrent = (filename: string, downloadDir: string) =>\n  request({\n    method: \"post\",\n    data: {\n      method: \"torrent-add\",\n      arguments: {\n        filename,\n        paused: false,\n        \"download-dir\": downloadDir,\n      },\n      tag: \"\",\n    },\n  });\n\nexport const startTorrents = (ids: number[]) =>\n  request({\n    method: \"post\",\n    data: {\n      method: \"torrent-start\",\n      arguments: {\n        ids,\n      },\n    },\n  });\n\nexport const stopTorrents = (ids: number[]) =>\n  request({\n    method: \"post\",\n    data: {\n      method: \"torrent-stop\",\n      arguments: {\n        ids,\n      },\n    },\n  });\n\nexport const verifyTorrents = (ids: number[]) =>\n  request({\n    method: \"post\",\n    data: {\n      method: \"torrent-verify\",\n      arguments: {\n        ids,\n      },\n    },\n  });\n\nexport const reannounceTorrents = (ids: number[]) =>\n  request({\n    method: \"post\",\n    data: {\n      method: \"torrent-reannounce\",\n      arguments: {\n        ids,\n      },\n    },\n  });\n\nexport const removeTorrents = (ids: number[], deleteLocalData = false) =>\n  request({\n    method: \"post\",\n    data: {\n      method: \"torrent-remove\",\n      arguments: {\n        ids,\n        \"delete-local-data\": deleteLocalData,\n      },\n    },\n  });\n","import { connect } from \"react-redux\";\n\nimport SignIn from \"src/components/SignIn\";\nimport { setLocale } from \"src/store/actions/rpc\";\n\nconst mapStateToProps = (state: { locale: string }) => ({\n  locale: state.locale,\n});\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst mapDispatchToProps = (dispatch: Function) => ({\n  setLocale: (val: string) => dispatch(setLocale(val)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import { IState } from \"src/types\";\n\nexport const getSessionSelector = (state: IState) => state.rpc.session;\nexport const getDownloadDirSelector = (state: IState) =>\n  state.rpc.session.downloadDir;\nexport const getStatsSelector = (state: IState) => state.rpc.stats;\nexport const getSpeedBytesSelector = (state: IState) =>\n  state.rpc.session.units.speedBytes;\nexport const getSpeedUnitsSelector = (state: IState) =>\n  state.rpc.session.units.speedUnits;\nexport const getSizeBytesSelector = (state: IState) =>\n  state.rpc.session.units.sizeBytes;\nexport const getSizeUnitsSelector = (state: IState) =>\n  state.rpc.session.units.sizeUnits;\n\nexport const getMenuOpen = (state: IState) => state.rpc.menuOpen;\n\nexport const getTorrents = (state: IState) => state.rpc.torrents;\n\n// Add Torrent\nexport const getAddTorrentDialogOpen = (state: IState) => state.app.open;\n\nexport const getSelectedIds = (state: IState) => state.rpc.selectedIds;\nexport const getSelectedTorrents = (state: IState) =>\n  state.rpc.torrents.all.filter((torrent) =>\n    state.rpc.selectedIds.includes(torrent.id)\n  );\n\nexport const getMessageConfig = (state: IState) => state.app.messageConfig;\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nimport { TOGGLE_ADD_TORRENT_DIALOG, SET_MESSAGE_BAR } from \"../constants\";\nimport { IMessageConfig, IState } from \"../../types\";\n\nexport const toggleAddTorrentDialog = (open?: boolean) => (\n  dispatch: ThunkDispatch<{}, {}, AnyAction>\n  // getState: () => IState\n) => {\n  // const payload = open === undefined ? getState().open : open\n\n  dispatch({\n    type: TOGGLE_ADD_TORRENT_DIALOG,\n    payload: open,\n  });\n};\n\nexport const setMessageBar = (payload: IMessageConfig) => (\n  dispatch: ThunkDispatch<{}, {}, AnyAction>,\n  getState: () => IState\n) => {\n  const key = (getState().app.messageConfig.key || 0) + 1;\n  dispatch({\n    type: SET_MESSAGE_BAR,\n    payload: {\n      ...payload,\n      key,\n    },\n  });\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Box, IconButton, Tooltip } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport SettingsInputAntennaIcon from \"@material-ui/icons/SettingsInputAntenna\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { toggleAddTorrentDialog } from \"src/store/actions/app\";\nimport { getSelectedIds } from \"src/store/selector\";\n\nimport {\n  startTorrents,\n  stopTorrents,\n  reannounceTorrents,\n  verifyTorrents,\n  removeTorrents,\n} from \"src/api\";\n\nconst ActionBar = () => {\n  const dispatch = useDispatch();\n  const selectedIds = useSelector(getSelectedIds);\n\n  const disableAction = selectedIds.length === 0;\n\n  const handleAdd = () => {\n    dispatch(toggleAddTorrentDialog(true));\n  };\n\n  const handleStart = () => {\n    startTorrents(selectedIds);\n  };\n\n  const handleStop = () => {\n    stopTorrents(selectedIds);\n  };\n\n  const handleReannounce = () => {\n    reannounceTorrents(selectedIds);\n  };\n\n  const handleVerify = () => {\n    verifyTorrents(selectedIds);\n  };\n\n  const handleRemove = () => {\n    removeTorrents(selectedIds, true);\n  };\n\n  return (\n    <Box>\n      <Tooltip title={<FormattedMessage id=\"toolbar.tip.addTorrent\" />}>\n        <IconButton onClick={handleAdd}>\n          <AddIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={<FormattedMessage id=\"toolbar.tip.start\" />}>\n        <IconButton disabled={disableAction} onClick={handleStart}>\n          <PlayArrowIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={<FormattedMessage id=\"toolbar.tip.pause\" />}>\n        <IconButton disabled={disableAction} onClick={handleStop}>\n          <PauseIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={<FormattedMessage id=\"toolbar.tip.deleteData\" />}>\n        <IconButton disabled={disableAction} onClick={handleRemove}>\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={<FormattedMessage id=\"toolbar.tip.recheck\" />}>\n        <IconButton disabled={disableAction} onClick={handleVerify}>\n          <StorageIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={<FormattedMessage id=\"toolbar.tip.morePeers\" />}>\n        <IconButton disabled={disableAction} onClick={handleReannounce}>\n          <SettingsInputAntennaIcon />\n        </IconButton>\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport default ActionBar;\n","import React from \"react\";\n\n// import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  Badge,\n} from \"@material-ui/core\";\nimport { ListItemProps } from \"@material-ui/core/ListItem\";\nimport { omit } from \"lodash\";\n\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     nested: {\n//       paddingLeft: theme.spacing(4),\n//     },\n//     num: {\n//       marginLeft: theme.spacing(1.5)\n//     }\n//   })\n// );\n\nexport default function MenuItem(\n  props: ListItemProps<\n    \"div\",\n    {\n      button?: true;\n      text: React.ReactNode;\n      icon: React.ReactNode;\n      menuOpen: boolean;\n      num: number;\n    }\n  >\n) {\n  // const classes = useStyles();\n\n  const { text, icon, num, menuOpen } = props;\n\n  const listItemProps = omit(props, [\"text\", \"icon\", \"menuOpen\", \"num\"]);\n\n  return (\n    <ListItem button component=\"div\" {...listItemProps}>\n      <ListItemIcon>\n        <Badge badgeContent={menuOpen ? 0 : num} color=\"primary\">\n          {icon}\n        </Badge>\n      </ListItemIcon>\n      <ListItemText primary={text} />\n      <ListItemSecondaryAction>\n        <Badge badgeContent={menuOpen ? num : 0} color=\"primary\" />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport SwapVertOutlinedIcon from \"@material-ui/icons/SwapVertOutlined\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\n// import WarningIcon from \"@material-ui/icons/Warning\";\nimport FindInPageIcon from \"@material-ui/icons/FindInPage\";\n\nimport { useSelector } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { getMenuOpen, getTorrents } from \"src/store/selector\";\nimport { IParamTypes, TorrentStatus } from \"src/types\";\nimport MenuItem from \"./MenuItem\";\n\nexport interface IMenu {\n  status: TorrentStatus;\n  textId: string;\n  icon: React.ReactNode;\n  hideOnZero: boolean;\n}\n\nconst drawerWidth = 240;\nconst closedDrawerWidth = 56;\n\nconst menus: IMenu[] = [\n  {\n    status: \"all\",\n    textId: \"tree.all\",\n    icon: <AllInboxIcon />,\n    hideOnZero: false,\n  },\n  {\n    status: \"downloading\",\n    textId: \"tree.downloading\",\n    icon: <InboxIcon />,\n    hideOnZero: false,\n  },\n  {\n    status: \"downloadWaiting\",\n    textId: \"tree.wait\",\n    icon: <HourglassEmptyIcon />,\n    hideOnZero: true,\n  },\n  {\n    status: \"paused\",\n    textId: \"tree.paused\",\n    icon: <PauseCircleOutlineIcon />,\n    hideOnZero: false,\n  },\n  {\n    status: \"active\",\n    textId: \"tree.active\",\n    icon: <SwapVertOutlinedIcon />,\n    hideOnZero: false,\n  },\n  {\n    status: \"seeding\",\n    textId: \"tree.sending\",\n    icon: <CloudUploadIcon />,\n    hideOnZero: false,\n  },\n  {\n    status: \"seedWaiting\",\n    textId: \"tree.wait\",\n    icon: <HourglassEmptyIcon />,\n    hideOnZero: true,\n  },\n  {\n    status: \"checking\",\n    textId: \"tree.check\",\n    icon: <FindInPageIcon />,\n    hideOnZero: true,\n  },\n  {\n    status: \"checkWaiting\",\n    textId: \"tree.wait\",\n    icon: <HourglassEmptyIcon />,\n    hideOnZero: true,\n  },\n  // {\n  //   status: \"warning\",\n  //   textId: \"tree.warning\",\n  //   icon: <WarningIcon />,\n  //   hideOnZero: true,\n  // },\n  {\n    status: \"error\",\n    textId: \"tree.error\",\n    icon: <ErrorOutlineIcon />,\n    hideOnZero: true,\n  },\n];\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: \"none\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: \"nowrap\",\n    },\n    drawerTop: {\n      top: 64,\n    },\n    drawerShadow: {\n      boxShadow:\n        \"0 16px 10px 0 rgba(0,0,0,0.14), 0 11px 18px 0 rgba(0,0,0,0.12), 0 13px 5px -1px rgba(0,0,0,0.2)\",\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: \"hidden\",\n      width: closedDrawerWidth,\n      [theme.breakpoints.up(\"sm\")]: {\n        width: closedDrawerWidth,\n      },\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n);\n\nexport default function MenuBar() {\n  const { torrentStatus } = useParams<IParamTypes>();\n  const history = useHistory();\n  const classes = useStyles();\n  const menuOpen = useSelector(getMenuOpen);\n  const torrents = useSelector(getTorrents);\n  const [menuTemporaryOpen, setMenuTemporaryOpen] = React.useState(false);\n\n  const open = menuTemporaryOpen || menuOpen;\n  const handleListItemClick = (status: string) => {\n    history.push(`/list/${status}`);\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx({\n          [classes.drawerTop]: true,\n          [classes.drawerShadow]: menuTemporaryOpen && !menuOpen,\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        }),\n      }}\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open,\n      })}\n      onMouseOver={() => {\n        setMenuTemporaryOpen(true);\n      }}\n      onMouseLeave={() => {\n        setMenuTemporaryOpen(false);\n      }}\n    >\n      <List>\n        {menus\n          .filter(\n            (item) => !item.hideOnZero || torrents[item.status].length > 0\n          )\n          .map((item) => (\n            <MenuItem\n              key={item.status}\n              text={<FormattedMessage id={item.textId} />}\n              icon={item.icon}\n              num={torrents[item.status].length}\n              selected={torrentStatus === item.status}\n              menuOpen={open}\n              onClick={() => {\n                handleListItemClick(item.status);\n              }}\n            />\n          ))}\n      </List>\n    </Drawer>\n  );\n}\n","import moment from \"moment\";\n\nimport store from \"src/store\";\n\nexport const formatBytes = (\n  number: number,\n  bytes: number,\n  units: string[],\n  digits = 2\n): string => {\n  let unitsIndex = 0;\n  number /= bytes;\n  while (number / bytes >= 1 && unitsIndex < units.length - 1) {\n    unitsIndex++;\n    number /= bytes;\n  }\n  return Number(number.toFixed(digits)) + units[unitsIndex];\n};\n\nexport const formatSize = (number: number, allowZero = false): string => {\n  const { session } = store.getState().rpc;\n  const { sizeBytes, sizeUnits } = session.units;\n  if (!allowZero && !number) {\n    return \" \";\n  }\n  return formatBytes(number, sizeBytes, sizeUnits);\n};\n\nexport const formatSpeed = (number: number, allowZero = false): string => {\n  const { session } = store.getState().rpc;\n  const { speedBytes, speedUnits } = session.units;\n  if (!allowZero && !number) {\n    return \" \";\n  }\n  return formatBytes(number, speedBytes, speedUnits);\n};\n\nexport const formatUnixTimeStamp = (timeStamp: number): string => {\n  if (!timeStamp) {\n    return \" \";\n  }\n  return moment.unix(timeStamp).format(\"YYYY-MM-DD HH:mm:ss\");\n};\n\nexport const formatLeftTime = (second: number): string => {\n  if (second === Number.POSITIVE_INFINITY) {\n    return \"--:--:--\";\n  }\n  let seconds: number | string = Math.floor(second % 60);\n  let minutes: number | string = Math.floor((second / 60) % 60);\n  const hours: number = Math.floor(second / 60 / 60);\n\n  if (seconds < 10) {\n    seconds = `0${seconds}`;\n  }\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  return `${hours}:${minutes}:${seconds}`;\n};\n","import * as React from \"react\";\nimport { CellParams } from \"@material-ui/x-grid\";\nimport { Link } from \"@material-ui/core\";\n\ninterface NameLinkProps {\n  value: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  id: number;\n}\n\nconst preventDefault = (event: React.SyntheticEvent) => event.preventDefault();\n\n// eslint-disable-next-line react/display-name\nconst NameLink = React.memo((props: NameLinkProps) => {\n  const { value } = props;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <Link href=\"#\" onClick={preventDefault}>\n      {value}\n    </Link>\n  );\n});\n\nexport default function renderName(params: CellParams) {\n  return (\n    <NameLink value={params.value as string} id={params.row.id as number} />\n  );\n}\n","import * as React from \"react\";\nimport { CellParams } from \"@material-ui/x-grid\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      border: `1px solid ${theme.palette.divider}`,\n      position: \"relative\",\n      overflow: \"hidden\",\n      width: \"100%\",\n      height: 26,\n      borderRadius: 2,\n    },\n    value: {\n      position: \"absolute\",\n      lineHeight: \"24px\",\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n    bar: {\n      height: \"100%\",\n      backgroundColor: \"#088208a3\",\n    },\n  })\n);\n\ninterface ProgressBarProps {\n  value: number;\n}\n\n// eslint-disable-next-line react/display-name\nconst ProgressBar = React.memo((props: ProgressBarProps) => {\n  const { value } = props;\n  const valueInPercent = value * 100;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div\n        className={classes.value}\n      >{`${valueInPercent.toLocaleString()} %`}</div>\n      <div className={classes.bar} style={{ maxWidth: `${valueInPercent}%` }} />\n    </div>\n  );\n});\n\nexport default function renderProgress(params: CellParams) {\n  return <ProgressBar value={Number(params.value)!} />;\n}\n","import React from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  XGrid,\n  ColDef,\n  ColTypeDef,\n  CellParams,\n  SelectionChangeParams,\n} from \"@material-ui/x-grid\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport { getTorrents } from \"src/store/selector\";\nimport { setSelectedIds } from \"src/store/actions/rpc\";\nimport {\n  formatSize,\n  formatSpeed,\n  formatUnixTimeStamp,\n  formatLeftTime,\n} from \"src/utils/formatter\";\nimport { IParamTypes } from \"src/types\";\nimport renderName from \"./renderName\";\nimport renderProgress from \"./renderProgress\";\n\nconst useSize: ColTypeDef = {\n  type: \"number\",\n  width: 130,\n  valueFormatter: ({ value }) => formatSize(Number(value)),\n};\n\nconst useSpeed: ColTypeDef = {\n  type: \"number\",\n  width: 130,\n  valueFormatter: ({ value }) => formatSpeed(Number(value)),\n};\n\nconst useTime: ColTypeDef = {\n  type: \"number\",\n  width: 200,\n  valueFormatter: ({ value }) => formatUnixTimeStamp(Number(value)),\n};\n\nconst renderStatus = ({ value }: CellParams) => (\n  <FormattedMessage id={`torrent.statusText.${value}`} />\n);\n\nconst TorrentTable: React.FC = () => {\n  const { torrentStatus } = useParams<IParamTypes>();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const torrents = useSelector(getTorrents);\n  const columns: ColDef[] = [\n    {\n      field: \"name\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.name\" }),\n      width: 130,\n      renderCell: renderName,\n    },\n    {\n      field: \"totalSize\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.totalSize\" }),\n      ...useSize,\n    },\n    {\n      field: \"percentDone\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.percentDone\" }),\n      type: \"number\",\n      width: 120,\n      renderCell: renderProgress,\n    },\n    {\n      field: \"leftUntilDone\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.remainingTime\" }),\n      valueFormatter: ({ value, row }) =>\n        value && row.rateDownload\n          ? formatLeftTime(Number(value) / Number(row.rateDownload))\n          : \" \",\n    },\n    {\n      field: \"uploadRatio\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.uploadRatio\" }),\n    },\n    {\n      field: \"status\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.status\" }),\n      renderCell: renderStatus,\n    },\n    {\n      field: \"seederCount\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.seederCount\" }),\n    },\n    {\n      field: \"leecherCount\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.leecherCount\" }),\n    },\n    {\n      field: \"rateDownload\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.rateDownload\" }),\n      ...useSpeed,\n    },\n    {\n      field: \"rateUpload\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.rateUpload\" }),\n      ...useSpeed,\n    },\n    {\n      field: \"completeSize\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.completeSize\" }),\n      ...useSize,\n    },\n    {\n      field: \"uploadedEver\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.uploadedEver\" }),\n      ...useSize,\n    },\n    {\n      field: \"addedDate\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.addedDate\" }),\n      ...useTime,\n    },\n    {\n      field: \"queuePosition\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.queuePosition\" }),\n    },\n    {\n      field: \"trackers\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.trackers\" }),\n    },\n    {\n      field: \"downloadDir\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.downloadDir\" }),\n    },\n    {\n      field: \"activityDate\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.activityDate\" }),\n      ...useTime,\n    },\n    {\n      field: \"labels\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.labels\" }),\n    },\n    {\n      field: \"doneDate\",\n      headerName: intl.formatMessage({ id: \"torrent.fields.doneDate\" }),\n      ...useTime,\n    },\n  ];\n  const rows = torrents[torrentStatus];\n\n  const handleSelectionChange = (params: SelectionChangeParams) => {\n    dispatch(setSelectedIds(params.rowIds.map((id) => Number(id))));\n  };\n\n  return (\n    <div\n      id=\"torrent-table\"\n      style={{ height: \"calc(100vh - 132px)\", width: \"100%\" }}\n    >\n      <XGrid\n        showToolbar\n        rows={rows}\n        columns={columns}\n        pageSize={20}\n        checkboxSelection\n        disableSelectionOnClick\n        onSelectionChange={handleSelectionChange}\n      />\n    </div>\n  );\n};\n\nexport default TorrentTable;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@material-ui/core\";\n\nimport {\n  getAddTorrentDialogOpen,\n  getDownloadDirSelector,\n} from \"src/store/selector\";\nimport { toggleAddTorrentDialog, setMessageBar } from \"src/store/actions/app\";\n\nimport { addTorrent } from \"src/api\";\n\nimport { IMessageConfig } from \"src/types\";\n\ninterface IFormInput {\n  downloadDir: string;\n  torrentUrl: string;\n}\n\ninterface IAddResultTorrentInfo {\n  hashString: string;\n  id: number;\n  name: string;\n}\n\ninterface IAddResult {\n  result: string;\n  arguments: Record<\n    \"torrent-duplicate\" | \"torrent-added\",\n    IAddResultTorrentInfo\n  >;\n}\n\nconst AddTorrentDialog = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const open = useSelector(getAddTorrentDialogOpen);\n  const downloadDirFromStore = useSelector(getDownloadDirSelector);\n  const { register, handleSubmit, reset, errors } = useForm();\n\n  React.useEffect(() => {\n    reset({\n      downloadDir: downloadDirFromStore,\n      torrentUrl: null,\n    });\n  }, [downloadDirFromStore]);\n\n  const handleClose = () => {\n    dispatch(toggleAddTorrentDialog(false));\n  };\n\n  const handleAddResult = (result: IAddResult) => {\n    let messageConfig: IMessageConfig;\n    if (result.result !== \"success\") {\n      messageConfig = {\n        open: true,\n        loading: false,\n        message: intl.formatMessage({ id: \"message.failure\" }) + result.result,\n        severity: \"error\",\n      };\n    } else if (result.arguments[\"torrent-added\"]) {\n      messageConfig = {\n        open: true,\n        loading: false,\n        message: intl.formatMessage({ id: \"message.added\" }),\n        severity: \"success\",\n      };\n    } else if (result.arguments[\"torrent-duplicate\"]) {\n      messageConfig = {\n        open: true,\n        loading: false,\n        message: intl.formatMessage({ id: \"message.duplicate\" }),\n        severity: \"warning\",\n      };\n    } else {\n      messageConfig = {\n        open: true,\n        loading: false,\n        message:\n          intl.formatMessage({ id: \"message.failure\" }) +\n          intl.formatMessage({ id: \"message.unknownError\" }),\n        severity: \"error\",\n      };\n    }\n    dispatch(setMessageBar(messageConfig));\n  };\n\n  const handleAdd = (data: IFormInput) => {\n    dispatch(\n      setMessageBar({\n        open: true,\n        loading: true,\n        message: intl.formatMessage({ id: \"message.adding\" }),\n        severity: \"info\",\n      })\n    );\n    addTorrent(data.torrentUrl, data.downloadDir)\n      .then((result) => handleAddResult(result.data as IAddResult))\n      .catch(() => {\n        dispatch(\n          setMessageBar({\n            open: true,\n            loading: false,\n            message: intl.formatMessage({ id: \"message.unknownError\" }),\n            severity: \"error\",\n          })\n        );\n      });\n  };\n\n  const onSubmit = (data: IFormInput) => {\n    handleAdd(data);\n    handleClose();\n  };\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      data-testid=\"add-torrent-dialog\"\n    >\n      <DialogTitle id=\"form-dialog-title\">\n        <FormattedMessage id=\"toolbar.addTorrent\" />\n      </DialogTitle>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogContent>\n          <TextField\n            inputProps={{\n              \"data-testid\": \"download-dir\",\n            }}\n            error={!!errors.downloadDir}\n            name=\"downloadDir\"\n            label={<FormattedMessage id=\"dialog.torrentAdd.downloadDir\" />}\n            fullWidth\n            inputRef={register({\n              required: \"please input download dir\",\n            })}\n            helperText={errors.downloadDir?.message || \"\"}\n          />\n          <TextField\n            inputProps={{\n              \"data-testid\": \"orrent-link\",\n            }}\n            autoFocus\n            error={!!errors.torrentUrl}\n            name=\"torrentUrl\"\n            label={<FormattedMessage id=\"dialog.torrentAdd.torrentUrl\" />}\n            multiline\n            rows={4}\n            fullWidth\n            inputRef={register({\n              required: \"please input torrent link\",\n            })}\n            helperText={errors.torrentUrl?.message || \"\"}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            <FormattedMessage id=\"dialog.public.buttonCancel\" />\n          </Button>\n          <Button type=\"submit\" color=\"primary\">\n            <FormattedMessage id=\"dialog.public.buttonOk\" />\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default AddTorrentDialog;\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\n\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport { getStatsSelector, getSessionSelector } from \"src/store/selector\";\nimport { formatSpeed, formatSize } from \"src/utils/formatter\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    split: {\n      color: \"#777\",\n      margin: theme.spacing(0, 0.5),\n    },\n  })\n);\n\nconst AppStatusBar = () => {\n  const stats = useSelector(getStatsSelector);\n  const session = useSelector(getSessionSelector);\n  const downloadSpeed = formatSpeed(stats.downloadSpeed, true);\n  const uploadSpeed = formatSpeed(stats.uploadSpeed, true);\n  const freeSpace = formatSize(session.downloadDirFreeSpace);\n  const classes = useStyles();\n\n  return (\n    <div>\n      <span>\n        <FormattedMessage id=\"statusbar.downloadspeed\" />\n        {downloadSpeed}\n      </span>\n      <span className={classes.split}>|</span>\n      <span>\n        <FormattedMessage id=\"statusbar.uploadspeed\" />\n        {uploadSpeed}\n      </span>\n      <span className={classes.split}>|</span>\n      <span>\n        <FormattedMessage id=\"dialog.systemConfig.downloadDirFreeSpace\" />\n        {freeSpace}\n      </span>\n      <span className={classes.split}>|</span>\n      <span>\n        Transmission <FormattedMessage id=\"statusbar.version\" />\n        {session.version}\n      </span>\n      <span className={classes.split}>|</span>\n      <span>\n        RPC: <span data-testid=\"rpc-version\">{session.rpcVersion}</span>\n      </span>\n    </div>\n  );\n};\n\nexport default AppStatusBar;\n","import React from \"react\";\nimport { Snackbar, CircularProgress } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { getMessageConfig } from \"src/store/selector\";\nimport { setMessageBar } from \"src/store/actions/app\";\n\nconst ALERT__ICON_SIZE = 22;\n\nconst MessageBar = () => {\n  const dispatch = useDispatch();\n  const messageConfig = useSelector(getMessageConfig);\n\n  const { key, open, loading, message, severity } = messageConfig;\n\n  const onClose = () => {\n    dispatch(\n      setMessageBar({\n        ...messageConfig,\n        open: false,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Snackbar\n        key={key}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        open={open}\n        autoHideDuration={5000}\n        onClose={onClose}\n      >\n        <Alert\n          elevation={6}\n          variant=\"filled\"\n          onClose={onClose}\n          severity={severity}\n          icon={\n            loading ? (\n              <CircularProgress color=\"inherit\" size={ALERT__ICON_SIZE} />\n            ) : undefined\n          }\n        >\n          {message}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default MessageBar;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  IconButton,\n  Paper,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  List,\n  ListItem,\n  ListItemText,\n  LinearProgress,\n  Divider,\n  Box,\n} from \"@material-ui/core\";\nimport { LinearProgressProps } from \"@material-ui/core/LinearProgress\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\nimport {\n  getSizeBytesSelector,\n  getSizeUnitsSelector,\n  getSpeedBytesSelector,\n  getSpeedUnitsSelector,\n  getMenuOpen,\n} from \"src/store/selector\";\n\nimport {\n  getSessionAction,\n  getTorrentsAction,\n  getSessionStatsAction,\n} from \"src/store/actions/rpc\";\nimport { IState, ISession } from \"src/types\";\nimport Progress from \"src/components/Progress\";\nimport ActionBar from \"src/components/ActionBar\";\nimport MenuBar from \"src/components/MenuBar\";\n\nimport TorrentTable from \"src/components/TorrentTable\";\nimport AddTorrentDialog from \"src/components/AddTorrentDialog\";\nimport AppStatusBar from \"src/components/AppStatusBar\";\nimport MessageBar from \"src/components/MessageBar\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      backgroundColor: theme.palette.background.paper,\n    },\n    container: {\n      marginLeft: 56,\n    },\n    menuOpen: {\n      marginLeft: 240,\n    },\n  })\n);\n\nconst Torrents: React.FC = () => {\n  const dispatch = useDispatch();\n  const torrents = useSelector((state: IState) => state.rpc.torrents);\n\n  const progressConfig = {\n    sizeBytes: useSelector(getSizeBytesSelector),\n    sizeUnits: useSelector(getSizeUnitsSelector),\n    speedBytes: useSelector(getSpeedBytesSelector),\n    speedUnits: useSelector(getSpeedUnitsSelector),\n  };\n\n  useEffect(() => {\n    dispatch(getSessionAction());\n    setInterval(() => {\n      dispatch(getTorrentsAction());\n      dispatch(getSessionStatsAction());\n    }, 5000);\n  }, []);\n\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = React.useState(-1);\n  const menuOpen = useSelector(getMenuOpen);\n\n  const handleListItemClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    index: number\n  ) => {\n    setSelectedIndex(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <MenuBar />\n      <Box\n        className={clsx(classes.container, {\n          [classes.menuOpen]: menuOpen,\n        })}\n      >\n        <ActionBar />\n        <AddTorrentDialog />\n        <TorrentTable />\n        {/* <List component=\"nav\" aria-label=\"main mailbox folders\">\n          {torrents.map((torrent, index) => {\n            return (\n              <ListItem\n                button\n                selected={selectedIndex === index}\n                onClick={(event) => handleListItemClick(event, index)}\n                key={index}\n              >\n                <ListItemIcon>\n                  <InboxIcon />\n                </ListItemIcon>\n                <ListItemIcon>\n                  <InboxIcon />\n                </ListItemIcon>\n                <ListItemText primary={torrent.name} secondary={\n                  <Progress torrent={torrent} config={progressConfig}/>\n                } />\n              </ListItem>\n            );\n          })}\n        </List> */}\n        <AppStatusBar />\n        <MessageBar />\n      </Box>\n    </div>\n  );\n};\n\nexport default Torrents;\n","import React from \"react\";\nimport { Tooltip, IconButton } from \"@material-ui/core\";\nimport { useIntl } from \"react-intl\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport BrightnessAutoIcon from \"@material-ui/icons/BrightnessAuto\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { IState } from \"src/types\";\nimport { toggleTheme } from \"src/store/actions/rpc\";\n\nconst ThemeToggle = () => {\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const theme = useSelector((state: IState) => state.rpc.theme);\n\n  const handleChangeTheme = () => {\n    dispatch(toggleTheme());\n  };\n\n  return (\n    <Tooltip title={intl.formatMessage({ id: \"toggleTheme\" })} enterDelay={300}>\n      <IconButton\n        color=\"inherit\"\n        onClick={handleChangeTheme}\n        data-ga-event-category=\"header\"\n        data-ga-event-action=\"dark\"\n      >\n        {theme === \"light\" && <Brightness4Icon />}\n        {theme === \"dark\" && <Brightness7Icon />}\n        {theme === \"auto\" && <BrightnessAutoIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default ThemeToggle;\n","import React, { useState } from \"react\";\nimport { Tooltip, Button, Menu, MenuItem } from \"@material-ui/core\";\nimport LanguageIcon from \"@material-ui/icons/Translate\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\n\nimport { LANGUAGES } from \"src/constants\";\nimport { setLocale } from \"src/store/actions/rpc\";\nimport { IState } from \"src/types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    language: {\n      margin: theme.spacing(0, 0.5, 0, 1),\n      display: \"none\",\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"block\",\n      },\n    },\n  })\n);\n\nexport default function LanguageToggle() {\n  const classes = useStyles();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const locale = useSelector((state: IState) => state.rpc.locale);\n\n  const [languageMenu, setLanguageMenu] = useState(null);\n\n  const handleLanguageIconClick = (event: any) => {\n    setLanguageMenu(event.currentTarget);\n  };\n  const handleLanguageMenuClose = () => {\n    setLanguageMenu(null);\n  };\n\n  const handleLanguageMenuItemClick = (code: string) => {\n    dispatch(setLocale(code));\n    handleLanguageMenuClose();\n  };\n\n  return (\n    <>\n      <Tooltip\n        title={intl.formatMessage({ id: \"changeLanguage\" })}\n        enterDelay={300}\n      >\n        <Button\n          id=\"switch-language\"\n          data-testid=\"switch-language\"\n          color=\"inherit\"\n          onClick={handleLanguageIconClick}\n          data-ga-event-category=\"header\"\n          data-ga-event-action=\"language\"\n        >\n          <LanguageIcon />\n          <span\n            id=\"selected-language\"\n            data-testid=\"selected-language\"\n            className={classes.language}\n          >\n            {LANGUAGES.find((language) => language.code === locale)?.text}\n          </span>\n          <ExpandMoreIcon fontSize=\"small\" />\n        </Button>\n      </Tooltip>\n      <Menu\n        id=\"language-menu\"\n        data-testid=\"language-menu\"\n        anchorEl={languageMenu}\n        open={Boolean(languageMenu)}\n        onClose={handleLanguageMenuClose}\n      >\n        {LANGUAGES.map((language) => (\n          <MenuItem\n            id={`lang-item-${language.code}`}\n            data-no-link=\"true\"\n            key={language.code}\n            value={language.code}\n            selected={locale === language.code}\n            onClick={() => {\n              handleLanguageMenuItemClick(language.code);\n            }}\n            lang={language.code}\n          >\n            {language.text}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  InputBase,\n  Tooltip,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  createStyles,\n  fade,\n  Theme,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\n\nimport { toggleMenuOpen } from \"src/store/actions/rpc\";\nimport { IState } from \"src/types\";\nimport { GITHUB_REPO } from \"src/constants\";\nimport ThemeToggle from \"src/components/ThemeToggle\";\nimport LanguageToggle from \"src/components/LanguageToggle\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\",\n      },\n    },\n    language: {\n      margin: theme.spacing(0, 0.5, 0, 1),\n      display: \"none\",\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"block\",\n      },\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      marginRight: theme.spacing(1),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\",\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    inputRoot: {\n      color: \"inherit\",\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\",\n        },\n      },\n    },\n  })\n);\n\nexport default function SearchAppBar() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  const themeType = useSelector((state: IState) => state.rpc.theme);\n\n  const appBarColor = themeType === \"dark\" ? \"transparent\" : undefined;\n\n  const handleMenuClick = () => {\n    dispatch(toggleMenuOpen());\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color={appBarColor}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={handleMenuClick}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Transmission Client\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder={intl.formatMessage({ id: \"search\" })}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n          <LanguageToggle />\n          <ThemeToggle />\n          <Tooltip title=\"Github\" enterDelay={300}>\n            <IconButton\n              component=\"a\"\n              color=\"inherit\"\n              href={GITHUB_REPO}\n              target=\"_blank\"\n              data-ga-event-category=\"header\"\n              data-ga-event-action=\"github\"\n            >\n              <GitHubIcon />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { LicenseInfo } from \"@material-ui/x-grid\";\n\nclass AppStart {\n  // eslint-disable-next-line class-methods-use-this\n  setupLicense() {\n    LicenseInfo.setLicenseKey(process.env.REACT_APP_MUIX_LICENSE_KEY as string);\n  }\n  start() {\n    this.setupLicense();\n  }\n}\n\nexport default new AppStart();\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Provider } from \"react-redux\";\n\nimport { APP_ROUTES } from \"./constants\";\nimport Intl from \"./containers/Intl\";\nimport Theme from \"./containers/Theme\";\nimport SignIn from \"./containers/SignIn\";\nimport List from \"./components/List\";\nimport Header from \"./components/Header\";\nimport store from \"./store\";\n\nimport appStart from \"./appStart\";\n\nappStart.start();\n\nconst App = (): JSX.Element => (\n  <Provider store={store}>\n    <Intl>\n      <Theme>\n        <Router>\n          <CssBaseline />\n          <Header />\n          <Switch>\n            <Route path={APP_ROUTES.signIn} component={SignIn} />\n            <Route path={APP_ROUTES.list} component={List} />\n            <Redirect from={APP_ROUTES.base} to={APP_ROUTES.allList} />\n          </Switch>\n        </Router>\n      </Theme>\n    </Intl>\n  </Provider>\n);\n\nexport default App;\n","/* eslint-disable promise/catch-or-return */\nimport { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    // eslint-disable-next-line promise/always-return\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}